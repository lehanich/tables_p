# # stage build
# FROM node:16-alpine

# WORKDIR /app

# # copy everything to the container
# COPY . .

# # clean install all dependencies
# RUN npm ci

# # remove potential security issues
# RUN npm audit fix

# # build SvelteKit app
# RUN npm run build


# # stage run
# FROM node:16-alpine

# WORKDIR /app

# # copy dependency list
# COPY --from=0 /app/package*.json ./

# # clean install dependencies, no devDependencies, no prepare script
# RUN npm ci --production --ignore-scripts

# # remove potential security issues
# RUN npm audit fix

# # copy built SvelteKit app to /app
# COPY --from=0 /app/build ./

# EXPOSE 3000
# CMD ["node", "./index.js"]

# FROM node:18-alpine
FROM node:lts-alpine as build-stage

WORKDIR /app

COPY package.json package-lock.json ./

RUN npm ci
COPY . .
RUN npm run build

# CMD npm rebuild esbuild && npm run devdocker -- --host


FROM nginx:1.23.3-alpine-perl as production-stage
# RUN mkdir /app
RUN ls -lart
COPY --from=build-stage /app/build /app

# # Copy entrypoint script as /entrypoint.sh
# COPY ./entrypoint.sh /entrypoint.sh

# # Grant Linux permissions and run entrypoint script
# RUN chmod +x /entrypoint.sh
# ENTRYPOINT ["/entrypoint.sh"]


#COPY nginx.conf /etc/nginx/nginx.conf
COPY nginx.default.conf /etc/nginx/nginx.default.conf
CMD envsubst '${PROXY_PASS} ${NGINX_PORT}' < /etc/nginx/nginx.default.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'